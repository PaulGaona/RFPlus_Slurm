// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// extract_psi_cpp
NumericMatrix extract_psi_cpp(NumericMatrix x, IntegerVector node_preds, List tree_paths, IntegerVector node_ids, IntegerVector split_vars, NumericVector split_vals);
RcppExport SEXP _RFPlus_extract_psi_cpp(SEXP xSEXP, SEXP node_predsSEXP, SEXP tree_pathsSEXP, SEXP node_idsSEXP, SEXP split_varsSEXP, SEXP split_valsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type node_preds(node_predsSEXP);
    Rcpp::traits::input_parameter< List >::type tree_paths(tree_pathsSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type node_ids(node_idsSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type split_vars(split_varsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type split_vals(split_valsSEXP);
    rcpp_result_gen = Rcpp::wrap(extract_psi_cpp(x, node_preds, tree_paths, node_ids, split_vars, split_vals));
    return rcpp_result_gen;
END_RCPP
}
// extract_psi_chr_cpp
NumericMatrix extract_psi_chr_cpp(NumericMatrix x, IntegerVector node_preds, List tree_paths, IntegerVector node_ids, IntegerVector split_vars, CharacterVector split_vals, IntegerVector unordered_factors);
RcppExport SEXP _RFPlus_extract_psi_chr_cpp(SEXP xSEXP, SEXP node_predsSEXP, SEXP tree_pathsSEXP, SEXP node_idsSEXP, SEXP split_varsSEXP, SEXP split_valsSEXP, SEXP unordered_factorsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type node_preds(node_predsSEXP);
    Rcpp::traits::input_parameter< List >::type tree_paths(tree_pathsSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type node_ids(node_idsSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type split_vars(split_varsSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type split_vals(split_valsSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type unordered_factors(unordered_factorsSEXP);
    rcpp_result_gen = Rcpp::wrap(extract_psi_chr_cpp(x, node_preds, tree_paths, node_ids, split_vars, split_vals, unordered_factors));
    return rcpp_result_gen;
END_RCPP
}
// get_tree_paths_cpp
List get_tree_paths_cpp(IntegerVector terminal_node_ids, IntegerVector left_child_ids, IntegerVector right_child_ids, IntegerVector node_ids);
RcppExport SEXP _RFPlus_get_tree_paths_cpp(SEXP terminal_node_idsSEXP, SEXP left_child_idsSEXP, SEXP right_child_idsSEXP, SEXP node_idsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type terminal_node_ids(terminal_node_idsSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type left_child_ids(left_child_idsSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type right_child_ids(right_child_idsSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type node_ids(node_idsSEXP);
    rcpp_result_gen = Rcpp::wrap(get_tree_paths_cpp(terminal_node_ids, left_child_ids, right_child_ids, node_ids));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_RFPlus_extract_psi_cpp", (DL_FUNC) &_RFPlus_extract_psi_cpp, 6},
    {"_RFPlus_extract_psi_chr_cpp", (DL_FUNC) &_RFPlus_extract_psi_chr_cpp, 7},
    {"_RFPlus_get_tree_paths_cpp", (DL_FUNC) &_RFPlus_get_tree_paths_cpp, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_RFPlus(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
